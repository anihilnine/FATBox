// Generated by Xamasoft JSON Class Generator
// http://www.xamasoft.com/json-class-generator

using System;
using System.Collections.Generic;
using System.Linq;
using Newtonsoft.Json;
using Newtonsoft.Json.Linq;

namespace FATBox.Core.ModCatalog
{

    public class Blueprint
    {
        // TODO: BAKE IN: 
        // TODO: Change the Blueprint lua files to set a Type Property. On Export it will be in json
        // TODO: Unique CategoriesList

        public string Type { get { return Source.Split('/')[1]; } }

        [JsonProperty("Description")]
        public string Description { get; set; }

        [JsonProperty("Categories")]
        public IList<string> Categories { get; set; }

        [JsonProperty("BlueprintId")]
        public string BlueprintId { get; set; }

        [JsonProperty("Source")]
        public string Source { get; set; }





        [JsonProperty("AverageDensity")]
        public double AverageDensity { get; set; }

        [JsonProperty("SelectionMeshScaleY")]
        public int SelectionMeshScaleY { get; set; }

        [JsonProperty("LifeBarRender")]
        public bool LifeBarRender { get; set; }

        [JsonProperty("StrategicIconName")]
        public string StrategicIconName { get; set; }

        [JsonProperty("SelectionCenterOffsetY")]
        public double SelectionCenterOffsetY { get; set; }

        [JsonProperty("ScriptModule")]
        public string ScriptModule { get; set; }

        [JsonProperty("SizeZ")]
        public double SizeZ { get; set; }

        [JsonProperty("Audio")]
        public Audio Audio { get; set; }

        [JsonProperty("CollisionOffsetY")]
        public double CollisionOffsetY { get; set; }

        [JsonProperty("SelectionMeshScaleZ")]
        public double SelectionMeshScaleZ { get; set; }

        [JsonProperty("SizeX")]
        public double SizeX { get; set; }

        [JsonProperty("DesiredShooterCap")]
        public int DesiredShooterCap { get; set; }

        [JsonProperty("CollisionShape")]
        public string CollisionShape { get; set; }

        [JsonProperty("BlueprintOrdinal")]
        public int BlueprintOrdinal { get; set; }

        [JsonProperty("SelectionMeshScaleX")]
        public double SelectionMeshScaleX { get; set; }

        [JsonProperty("SelectionYOffset")]
        public double SelectionYOffset { get; set; }

        [JsonProperty("CollisionOffsetX")]
        public double CollisionOffsetX { get; set; }

        [JsonProperty("ScriptClass")]
        public string ScriptClass { get; set; }

        [JsonProperty("SelectionMeshUseTopAmount")]
        public double SelectionMeshUseTopAmount { get; set; }

        [JsonProperty("LifeBarSize")]
        public double LifeBarSize { get; set; }

        [JsonProperty("AltFootprint")]
        public AltFootprint AltFootprint { get; set; }

        [JsonProperty("InertiaTensorY")]
        public double InertiaTensorY { get; set; }

        [JsonProperty("InertiaTensorX")]
        public double InertiaTensorX { get; set; }

        [JsonProperty("CollisionOffsetZ")]
        public double CollisionOffsetZ { get; set; }

        [JsonProperty("Economy")]
        public Economy Economy { get; set; }

        [JsonProperty("Footprint")]
        public Footprint Footprint { get; set; }

        [JsonProperty("SelectionSizeZ")]
        public double SelectionSizeZ { get; set; }

        [JsonProperty("Interface")]
        public Interface Interface { get; set; }

        [JsonProperty("Defense")]
        public Defense Defense { get; set; }

        [JsonProperty("LifeBarHeight")]
        public double LifeBarHeight { get; set; }

        [JsonProperty("Physics")]
        public Physics Physics { get; set; }

        [JsonProperty("SelectionSizeX")]
        public double SelectionSizeX { get; set; }

        [JsonProperty("SelectionCenterOffsetX")]
        public double SelectionCenterOffsetX { get; set; }

        [JsonProperty("LifeBarOffset")]
        public double LifeBarOffset { get; set; }

        [JsonProperty("SizeY")]
        public double SizeY { get; set; }

        [JsonProperty("SelectionCenterOffsetZ")]
        public double SelectionCenterOffsetZ { get; set; }

        [JsonProperty("InertiaTensorZ")]
        public double InertiaTensorZ { get; set; }

        [JsonProperty("SelectionSizeY")]
        public int SelectionSizeY { get; set; }

        [JsonProperty("Display")]
        public Display Display { get; set; }

        [JsonProperty("StrategicIconSortPriority")]
        public int StrategicIconSortPriority { get; set; }

        [JsonProperty("SelectionThickness")]
        public double SelectionThickness { get; set; }

        [JsonProperty("UseOOBTestZoom")]
        public int UseOOBTestZoom { get; set; }

        [JsonProperty("AI")]
        public AI AI { get; set; }

        [JsonProperty("BuildIconSortPriority")]
        public int? BuildIconSortPriority { get; set; }

        [JsonProperty("Intel")]
        public Intel Intel { get; set; }

        [JsonProperty("Transport")]
        public Transport Transport { get; set; }

        [JsonProperty("General")]
        public General General { get; set; }

        [JsonProperty("Air")]
        public Air3 Air { get; set; }

        [JsonProperty("Wreckage")]
        public Wreckage Wreckage { get; set; }

        [JsonProperty("SizeSphere")]
        public double? SizeSphere { get; set; }

        [JsonProperty("Weapon")]
        public IList<Weapon> Weapon { get; set; }

        [JsonProperty("UniformScale")]
        public double? UniformScale { get; set; }

        [JsonProperty("LODs")]
        public IList<object> LODs { get; set; }

        [JsonProperty("IconFadeInZoom")]
        public int? IconFadeInZoom { get; set; }

        [JsonProperty("SortOrder")]
        public int? SortOrder { get; set; }

        [JsonProperty("StraddleWater")]
        public bool? StraddleWater { get; set; }

        [JsonProperty("DevStatus")]
        public string DevStatus { get; set; }

        [JsonProperty("Enhancements")]
        public Enhancements Enhancements { get; set; }

        [JsonProperty("Veteran")]
        public Veteran Veteran { get; set; }

        [JsonProperty("Buffs")]
        public Buffs Buffs { get; set; }

        [JsonProperty("EnhancementPresetAssigned")]
        public EnhancementPresetAssigned EnhancementPresetAssigned { get; set; }

        [JsonProperty("Adjacency")]
        public string Adjacency { get; set; }

        [JsonProperty("SplitDamage")]
        public SplitDamage SplitDamage { get; set; }

        [JsonProperty("Mesh")]
        public Mesh2 Mesh { get; set; }

        [JsonProperty("StrategicIconSize")]
        public int? StrategicIconSize { get; set; }

        [JsonProperty("Abilities")]
        public Abilities Abilities { get; set; }

        [JsonProperty("ResolvePath")]
        public bool? ResolvePath { get; set; }

        [JsonProperty("Merge")]
        public bool? Merge { get; set; }

        [JsonProperty("UpgradeDesc")]
        public string UpgradeDesc { get; set; }

        [JsonProperty("DoNotCollideList")]
        public IList<string> DoNotCollideList { get; set; }

        [JsonProperty("BuffFields")]
        public BuffFields BuffFields { get; set; }

        [JsonProperty("Lifetime")]
        public int? Lifetime { get; set; }

        [JsonProperty("MaxMoveRange")]
        public int? MaxMoveRange { get; set; }

        [JsonProperty("EnhancementPresets")]
        public EnhancementPresets EnhancementPresets { get; set; }

        [JsonProperty("ContrailEffects")]
        public IList<string> ContrailEffects { get; set; }

        [JsonProperty("WatchBone")]
        public int? WatchBone { get; set; }

    }

}
